[33mcommit 3b1be5dba69ebbaf15d8df8ac876c80e1acd431d[m[33m ([m[1;36mHEAD -> [m[1;32myungu[m[33m, [m[1;31morigin/yungu[m[33m)[m
Author: yun9u <yungu.chung@gmail.com>
Date:   Thu Aug 31 17:21:25 2023 +0900

    mypage check

[1mdiff --git a/requirements.txt b/requirements.txt[m
[1mindex 17f17e4..6625bfe 100644[m
[1m--- a/requirements.txt[m
[1m+++ b/requirements.txt[m
[36m@@ -24,3 +24,4 @@[m [mSQLAlchemy==2.0.20[m
 typing_extensions==4.7.1[m
 Werkzeug==2.3.7[m
 WTForms==3.0.1[m
[32m+[m[32mwatchdog[m
\ No newline at end of file[m
[1mdiff --git a/woorichApp/__init__.py b/woorichApp/__init__.py[m
[1mindex 3d92435..d19f485 100644[m
[1m--- a/woorichApp/__init__.py[m
[1m+++ b/woorichApp/__init__.py[m
[36m@@ -3,6 +3,7 @@[m [mfrom flask_migrate import Migrate[m
 from flask_sqlalchemy import SQLAlchemy[m
 from sqlalchemy import MetaData[m
 from flask_wtf.csrf import CSRFProtect[m
[32m+[m[32mfrom flask_login import LoginManager[m
 [m
 import config[m
 [m
[36m@@ -18,6 +19,9 @@[m [mdb = SQLAlchemy(metadata=MetaData(naming_convention=naming_convention))[m
 migrate = Migrate()[m
 csrf = CSRFProtect()[m
 [m
[32m+[m[32m# Flask-Login 설정[m
[32m+[m[32mlogin_manager = LoginManager()[m
[32m+[m
 [m
 def create_app():[m
     app = Flask(__name__)[m
[36m@@ -31,6 +35,15 @@[m [mdef create_app():[m
         migrate.init_app(app, db)[m
     from . import models[m
 [m
[32m+[m[32m    # Flask-Login 초기화[m
[32m+[m[32m    login_manager.init_app(app)[m
[32m+[m[32m    from .models import User[m
[32m+[m
[32m+[m[32m    @login_manager.user_loader[m
[32m+[m[32m    def load_user(user_id):[m
[32m+[m[32m        return User.query.get(int(user_id))[m
[32m+[m
[32m+[m
     csrf.init_app(app)[m
     [m
     # 블루프린트[m
[36m@@ -46,4 +59,4 @@[m [mdef create_app():[m
     from .filter import format_datetime[m
     app.jinja_env.filters['datetime'] = format_datetime[m
 [m
[31m-    return app[m
[32m+[m[32m    return app[m
\ No newline at end of file[m
[1mdiff --git a/woorichApp/models.py b/woorichApp/models.py[m
[1mindex 3bb677b..082c710 100644[m
[1m--- a/woorichApp/models.py[m
[1m+++ b/woorichApp/models.py[m
[36m@@ -32,7 +32,6 @@[m [mclass Reply(db.Model):[m
     admin_no = db.Column(db.Integer, db.ForeignKey('admin.no', ondelete='CASCADE'))[m
     board_no = db.Column(db.Integer, db.ForeignKey('board.no', ondelete='CASCADE'))[m
     board = db.relationship(Board, backref=db.backref('reply'))[m
[31m-    admin_no = db.Column(db.Integer, db.ForeignKey('admin.no', ondelete='CASCADE'))[m
 [m
 class Admin(db.Model):[m
     __tablename__ = 'admin'[m
[1mdiff --git a/woorichApp/templates/includes/navbar.html b/woorichApp/templates/includes/navbar.html[m
[1mindex ecc4278..b2b5ecc 100644[m
[1m--- a/woorichApp/templates/includes/navbar.html[m
[1m+++ b/woorichApp/templates/includes/navbar.html[m
[36m@@ -2,6 +2,15 @@[m
 <nav[m
   class="navbar navbar-expand-lg navbar-light rounded-bottom shadow-sm px-5 py-3"[m
 >[m
[32m+[m[32m  <style>[m
[32m+[m[32m    .navbar-brand {[m
[32m+[m[32m      font-size: 2rem; /* Woorich 글자 크기 조정. */[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    .navbar-nav-right {[m
[32m+[m[32m      margin-left: auto; /* 마이페이지와 로그아웃을 오른쪽으로 정렬. */[m
[32m+[m[32m    }[m
[32m+[m[32m  </style>[m
   <div class="container-fluid">[m
     <a class="navbar-brand" href="{{ url_for('main.index') }}">Woorich</a>[m
     <button[m
[36m@@ -27,7 +36,8 @@[m
         </li>[m
       </ul>[m
       {% if g.user %}[m
[31m-      <ul class="navbar-nav me-auto mb-2 mb-lg-0">[m
[32m+[m[32m      <!-- .navbar-nav-right 클래스 추가 -->[m
[32m+[m[32m      <ul class="navbar-nav navbar-nav-right mb-2 mb-lg-0">[m
         <li class="nav-item">[m
           <a class="nav-link" href="{{ url_for('mypage.mypage') }}"[m
             ><i class="bi bi-person-lines-fill mx-2"></i>마이페이지</a[m
[36m@@ -39,11 +49,9 @@[m
             g.user.username }} (로그아웃)</a[m
           >[m
         </li>[m
[31m-        <li class="nav-item"></li>[m
       </ul>[m
[31m-[m
       {% else %}[m
[31m-      <ul class="navbar-nav me-auto mb-2 mb-lg-0">[m
[32m+[m[32m      <ul class="navbar-nav navbar-nav-right mb-2 mb-lg-0">[m
         <li class="nav-item">[m
           <a class="nav-link" href="{{ url_for('auth.login') }}">로그인</a>[m
         </li>[m
[1mdiff --git a/woorichApp/templates/mypage/mypage.html b/woorichApp/templates/mypage/mypage.html[m
[1mindex 9412f67..50fdcc5 100644[m
[1m--- a/woorichApp/templates/mypage/mypage.html[m
[1m+++ b/woorichApp/templates/mypage/mypage.html[m
[36m@@ -1,15 +1,159 @@[m
 <!-- mypage.html -->[m
 {% extends "layouts/base.html" %} {% block content %}[m
[31m-<h1>안녕하세요, {{ user.username }}님!</h1>[m
[31m-<p>고객님의 ID는: {{ user_no }}입니다.</p>[m
[31m-<a href="{{ url_for('auth.delete_account') }}" class="btn btn-danger"[m
[31m-  >회원탈퇴</a[m
[31m->[m
[31m-<h2>게시글 목록</h2>[m
[31m-<ul>[m
[31m-  {% for board in user.board_set %}[m
[31m-  <!-- 변경된 데이터 모델에 맞게 board_set 사용 -->[m
[31m-  <li>{{ board.b_title }}</li>[m
[31m-  {% endfor %}[m
[31m-</ul>[m
[32m+[m[32m<style>[m
[32m+[m[32m  .left-section {[m
[32m+[m[32m    height: 100vh; /* 사이드바 길이를 늘림 */[m
[32m+[m[32m  }[m
[32m+[m[32m  .left-section h3 {[m
[32m+[m[32m    font-size: 2.5em; /* 사용자명 글씨 크기 */[m
[32m+[m[32m    margin-bottom: 100px; /* h3와 ul 사이의 간격을 조정 */[m
[32m+[m[32m  }[m
[32m+[m[32m  .left-section ul {[m
[32m+[m[32m    list-style-type: none;[m
[32m+[m[32m    padding: 0;[m
[32m+[m[32m  }[m
[32m+[m[32m  .left-section ul li {[m
[32m+[m[32m    font-size: 1.5em; /* 목록 글씨 크기 */[m
[32m+[m[32m    margin-bottom: 50px; /* 목록 사이의 간격 */[m
[32m+[m[32m  }[m
[32m+[m[32m  input[type="text"],[m
[32m+[m[32m  input[type="password"],[m
[32m+[m[32m  input[type="email"],[m
[32m+[m[32m  input[type="tel"] {[m
[32m+[m[32m    width: 60%; /* 폼의 너비 */[m
[32m+[m[32m    height: 40px; /* 폼의 높이 */[m
[32m+[m[32m  }[m
[32m+[m[32m  .row {[m
[32m+[m[32m    margin-bottom: 40px; /* 각 행의 아래쪽에 마진을 추가 */[m
[32m+[m[32m  }[m
[32m+[m[32m  h2 {[m
[32m+[m[32m    margin-bottom: 50px; /* '계정 설정' 텍스트와 아래 항목들 사이의 간격을 넓힘 */[m
[32m+[m[32m  }[m
[32m+[m[32m</style>[m
[32m+[m[32m<div class="container-fluid">[m
[32m+[m[32m  <div class="row">[m
[32m+[m[32m    <!-- Left Sidebar -->[m
[32m+[m[32m    <div class="left-section col-3 p-4 mb-3 text-secondary shadow">[m
[32m+[m[32m      <div class="mb-5">[m
[32m+[m[32m        <h3>{{ user.username }}님</h3>[m
[32m+[m[32m        <ul>[m
[32m+[m[32m          <li>스크랩 목록</li>[m
[32m+[m[32m          <li><a href="#" id="show_account_settings">계정 설정</a></li>[m
[32m+[m[32m          <li><a href="{{ url_for('auth.delete_account') }}">계정 탈퇴</a></li>[m
[32m+[m[32m        </ul>[m
[32m+[m[32m      </div>[m
[32m+[m[32m    </div>[m
[32m+[m
[32m+[m[32m    <!-- Right Content -->[m
[32m+[m[32m    <div id="right-content" class="right-section col-9 bg-light text-center">[m
[32m+[m[32m      <!-- Account Settings Form (Initially hidden) -->[m
[32m+[m[32m      <div id="account-settings-form" style="display: none">[m
[32m+[m[32m        <h2>계정 설정</h2>[m
[32m+[m[32m        <form id="user-update-form">[m
[32m+[m[32m          <!-- CSRF 토큰 필드 추가 -->[m
[32m+[m[32m          <input type="hidden" id="csrf_token" value="{{ csrf_token() }}" />[m
[32m+[m
[32m+[m[32m          <div class="row">[m
[32m+[m[32m            <!-- 첫 번째 행 -->[m
[32m+[m[32m            <div class="col">[m
[32m+[m[32m              <label>사용자명</label>[m
[32m+[m[32m              <input[m
[32m+[m[32m                type="text"[m
[32m+[m[32m                id="username"[m
[32m+[m[32m                value="{{ user.username }}"[m
[32m+[m[32m                disabled[m
[32m+[m[32m              />[m
[32m+[m[32m            </div>[m
[32m+[m[32m            <div class="col">[m
[32m+[m[32m              <label>ID</label>[m
[32m+[m[32m              <input[m
[32m+[m[32m                type="text"[m
[32m+[m[32m                id="user_id"[m
[32m+[m[32m                value="{{ user.user_id }}"[m
[32m+[m[32m                disabled[m
[32m+[m[32m              />[m
[32m+[m[32m            </div>[m
[32m+[m[32m          </div>[m
[32m+[m
[32m+[m[32m          <!-- 두 번째 행 -->[m
[32m+[m[32m          <div class="row">[m
[32m+[m[32m            <div class="col">[m
[32m+[m[32m              <label>새로운 비밀번호</label>[m
[32m+[m[32m              <input type="password" id="password" />[m
[32m+[m[32m            </div>[m
[32m+[m[32m            <div class="col">[m
[32m+[m[32m              <label>Email</label>[m
[32m+[m[32m              <input type="email" id="email" value="{{ user.email }}" />[m
[32m+[m[32m            </div>[m
[32m+[m[32m          </div>[m
[32m+[m
[32m+[m[32m          <!-- 세 번째 행 -->[m
[32m+[m[32m          <div class="row">[m
[32m+[m[32m            <div class="col">[m
[32m+[m[32m              <label>새로운 비밀번호 확인</label>[m
[32m+[m[32m              <input type="password" id="confirm_password" />[m
[32m+[m[32m            </div>[m
[32m+[m[32m            <div class="col">[m
[32m+[m[32m              <label>Phone</label>[m
[32m+[m[32m              <input type="tel" id="phone" value="{{ user.phone }}" />[m
[32m+[m[32m            </div>[m
[32m+[m[32m          </div>[m
[32m+[m
[32m+[m[32m          <!-- 네 번째 행 -->[m
[32m+[m[32m          <div class="row">[m
[32m+[m[32m            <div class="col">[m
[32m+[m[32m              <label>Address</label>[m
[32m+[m[32m              <input type="text" id="address" value="{{ user.address }}" />[m
[32m+[m[32m            </div>[m
[32m+[m[32m          </div>[m
[32m+[m
[32m+[m[32m          <a[m
[32m+[m[32m            herf="{{ url_for('mypage.update_user_info', user_id=user.user_id) }}"[m
[32m+[m[32m            class="btn"[m
[32m+[m[32m            id="update-info"[m
[32m+[m[32m            >회원정보수정</a[m
[32m+[m[32m          >[m
[32m+[m[32m        </form>[m
[32m+[m[32m      </div>[m
[32m+[m[32m    </div>[m
[32m+[m[32m  </div>[m
[32m+[m[32m</div>[m
[32m+[m[32m<script>[m
[32m+[m[32m  // 계정 설정을 클릭했을 때 폼을 표시합니다.[m
[32m+[m[32m  document[m
[32m+[m[32m    .getElementById("show_account_settings")[m
[32m+[m[32m    .addEventListener("click", function () {[m
[32m+[m[32m      document.getElementById("account-settings-form").style.display = "block";[m
[32m+[m[32m    });[m
[32m+[m
[32m+[m[32m  // // 회원정보 수정 버튼을 눌렀을 때[m
[32m+[m[32m  // document.getElementById("update-info").addEventListener("click", function () {[m
[32m+[m[32m  //   // 여기서는 예시로 AJAX를 사용하여 서버에 정보를 보냅니다.[m
[32m+[m[32m  //   var xhr = new XMLHttpRequest();[m
[32m+[m[32m  //   xhr.open("POST", "/update_user_info"); // 업데이트를 처리하는 서버의 URL[m
[32m+[m[32m  //   xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");[m
[32m+[m
[32m+[m[32m  //   // CSRF 토큰 헤더에 추가[m
[32m+[m[32m  //   xhr.setRequestHeader([m
[32m+[m[32m  //     "X-CSRFToken",[m
[32m+[m[32m  //     document.getElementById("csrf_token").value[m
[32m+[m[32m  //   );[m
[32m+[m
[32m+[m[32m  //   xhr.send([m
[32m+[m[32m  //     JSON.stringify({[m
[32m+[m[32m  //       user_id: document.getElementById("username").value,[m
[32m+[m[32m  //       user_pw: document.getElementById("password").value,[m
[32m+[m[32m  //       email: document.getElementById("email").value,[m
[32m+[m[32m  //       phone: document.getElementById("phone").value,[m
[32m+[m[32m  //       address: document.getElementById("address").value,[m
[32m+[m[32m  //     })[m
[32m+[m[32m  //   );[m
[32m+[m
[32m+[m[32m  //   xhr.onreadystatechange = function () {[m
[32m+[m[32m  //     if (xhr.readyState == 4 && xhr.status == 200) {[m
[32m+[m[32m  //       alert("계정 정보가 수정되었습니다."); // 성공 메시지[m
[32m+[m[32m  //     }[m
[32m+[m[32m  //   };[m
[32m+[m[32m  // });[m
[32m+[m[32m</script>[m
 {% endblock %}[m
[1mdiff --git a/woorichApp/views/auth_views.py b/woorichApp/views/auth_views.py[m
[1mindex d9c223c..362d38e 100644[m
[1m--- a/woorichApp/views/auth_views.py[m
[1m+++ b/woorichApp/views/auth_views.py[m
[36m@@ -87,4 +87,4 @@[m [mdef delete_account():[m
         logout()[m
         flash('계정이 성공적으로 삭제되었습니다.')[m
         return redirect(url_for('main.index'))[m
[31m-    return render_template('auth/delete_account.html')[m
[32m+[m[32m    return render_template('auth/delete_account.html')[m
\ No newline at end of file[m
[1mdiff --git a/woorichApp/views/mypage_views.py b/woorichApp/views/mypage_views.py[m
[1mindex 62e7b73..cf83680 100644[m
[1m--- a/woorichApp/views/mypage_views.py[m
[1m+++ b/woorichApp/views/mypage_views.py[m
[36m@@ -1,7 +1,7 @@[m
 from flask import Blueprint, redirect, render_template, request, session, flash, url_for, jsonify, g[m
 from flask_login import login_required, current_user[m
[31m-#from .\models import Note, User[m
 from woorichApp import db[m
[32m+[m[32mfrom werkzeug.security import generate_password_hash, check_password_hash[m
 [m
 bp = Blueprint('mypage', __name__)[m
 [m
[36m@@ -11,9 +11,19 @@[m [mdef mypage():[m
     user = g.user[m
     return render_template('mypage/mypage.html', user=user)[m
 [m
[32m+[m[32m@bp.route('/update_user_info', methods=['POST'])[m
[32m+[m[32m@login_required[m
[32m+[m[32mdef update_user_info():[m
[32m+[m[32m    data = request.json[m
[32m+[m[32m    user = g.user[m
[32m+[m[32m    if not user:[m
[32m+[m[32m        return jsonify({"message": "User not found"}), 404[m
[32m+[m
[32m+[m[32m    if data.get('password'):[m
[32m+[m[32m        user.user_pw = generate_password_hash(data['password'])[m
[32m+[m[32m    user.email = data.get('email', user.email)[m
[32m+[m[32m    user.phone = data.get('phone', user.phone)[m
[32m+[m[32m    user.address = data.get('address', user.address)[m
 [m
[31m-# 나의 정보 수정 페이지[m
[31m-# @mypage_views.route('/mypage/update', methods=['GET','POST'])[m
[31m-# @login_required[m
[31m-# def mypage_update():[m
[31m-#     return render_template('mypage_update.html')[m
\ No newline at end of file[m
[32m+[m[32m    db.session.commit()[m
[32m+[m[32m    return jsonify({"message": "계정 정보가 수정되었습니다."})[m
